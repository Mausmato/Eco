/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.
 
 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
 // It is safe to enter your event code here
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:USER_GUI:954416:
  appc.background(230);
} //_CODE_:USER_GUI:954416:]

public void Animal_SpawnM(GButton source, GEvent event) {

  //function to find and spawn the animals
  int selectedAnimal = Creatures.getSelectedIndex();
  String entityType = getEntityType(selectedAnimal);
  println("Spawning animal: " + entityType);
  spawnEntity(entityType);
}

// Add this method to get the entity type based on the index
String getEntityType(int index) {
  //DROP DOWN INDEX
  switch (index) {
  case 0:
    return "wolf";
  case 1:
    return "fox";
  case 2:
    return "deer"; // Add more cases for other animals
  case 3:
    return "squirrel";
    // Add more cases for plants
  default:
    return "unknown";
  }
}

public void Animals(GDropList source, GEvent event) { //_CODE_:Creatures:959621:
  println("Creatures - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Creatures:959621:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:Plants:748717:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
}



public void Biomes_Clicks(GDropList source, GEvent event) { //_CODE_:Biomes:752877:
  println("Biomes - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Biomes:752877:



// Create all the GUI controls.
// autogenerated do not edit
public void createGUI() {
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  USER_GUI = GWindow.getWindow(this, "Eco Editor", 0, 0, 250, 275, JAVA2D);
  USER_GUI.noLoop();
  USER_GUI.setActionOnClose(G4P.KEEP_OPEN);
  USER_GUI.addDrawHandler(this, "win_draw1");
  label1 = new GLabel(USER_GUI, 85, 20, 80, 30);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Welcome to the Eco Editor");
  label1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label1.setOpaque(false);
  label2 = new GLabel(USER_GUI, 85, 20, 80, 300);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Edit Values of Trees, Bushes and Water in the Code");
  label2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label2.setOpaque(false);
  label3 = new GLabel(USER_GUI, 55, 20, 140, 400);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Spacebar to start and stop the program");
  label3.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label3.setOpaque(false);
  label4 = new GLabel(USER_GUI, 55, 20, 140, 470);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Click on the animals for a suprise!");
  label4.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label4.setOpaque(false);
  Creatures = new GDropList(USER_GUI, 80, 65, 90, 80, 3, 10);
  Creatures.setItems(loadStrings("list_959621"), 0);
  Creatures.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Creatures.addEventHandler(this, "Animals");
  Animal_Spawn = new GButton(USER_GUI, 85, 95, 80, 27);
  Animal_Spawn.setText("Spawn Animal");
  Animal_Spawn.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Animal_Spawn.addEventHandler(this, "Animal_SpawnM");

  USER_GUI.loop();
}

// Variable declarations
// autogenerated do not edit
GWindow USER_GUI;
GLabel label1;
GLabel label2;
GLabel label3;
GLabel label4;
GDropList Creatures;
GButton Animal_Spawn;
