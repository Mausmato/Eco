/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:USER_GUI:954416:
  appc.background(230);
} //_CODE_:USER_GUI:954416:

public void Animals(GDropList source, GEvent event) { //_CODE_:Creatures:959621:
  println("Creatures - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Creatures:959621:

public void Animal_SpawnM(GButton source, GEvent event) { //_CODE_:Animal_Spawn:768782:
  println("Animal_Spawn - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:Animal_Spawn:768782:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:Plants:748717:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Plants:748717:

public void Spawn_PlantM(GButton source, GEvent event) { //_CODE_:Spawn_Plant:632591:
  println("Spawn_Plant - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:Spawn_Plant:632591:

public void Biomes_Clicks(GDropList source, GEvent event) { //_CODE_:Biomes:752877:
  println("Biomes - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Biomes:752877:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  USER_GUI = GWindow.getWindow(this, "Eco Editor", 0, 0, 250, 375, JAVA2D);
  USER_GUI.noLoop();
  USER_GUI.setActionOnClose(G4P.KEEP_OPEN);
  USER_GUI.addDrawHandler(this, "win_draw1");
  label1 = new GLabel(USER_GUI, 85, 20, 80, 30);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Welcome to the Eco Editor");
  label1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label1.setOpaque(false);
  Creatures = new GDropList(USER_GUI, 80, 65, 90, 80, 3, 10);
  Creatures.setItems(loadStrings("list_959621"), 0);
  Creatures.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Creatures.addEventHandler(this, "Animals");
  Animal_Spawn = new GButton(USER_GUI, 85, 95, 80, 27);
  Animal_Spawn.setText("Spawn Animal");
  Animal_Spawn.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Animal_Spawn.addEventHandler(this, "Animal_SpawnM");
  Plants = new GDropList(USER_GUI, 80, 165, 90, 80, 3, 10);
  Plants.setItems(loadStrings("list_748717"), 0);
  Plants.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Plants.addEventHandler(this, "dropList1_click1");
  Spawn_Plant = new GButton(USER_GUI, 85, 195, 80, 27);
  Spawn_Plant.setText("Spawn   Plant");
  Spawn_Plant.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Spawn_Plant.addEventHandler(this, "Spawn_PlantM");
  biomes = new GLabel(USER_GUI, 85, 265, 80, 20);
  biomes.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  biomes.setText("Biome");
  biomes.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  biomes.setOpaque(false);
  Biomes = new GDropList(USER_GUI, 80, 295, 90, 80, 3, 10);
  Biomes.setItems(loadStrings("list_752877"), 0);
  Biomes.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Biomes.addEventHandler(this, "Biomes_Clicks");
  USER_GUI.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow USER_GUI;
GLabel label1; 
GDropList Creatures; 
GButton Animal_Spawn; 
GDropList Plants; 
GButton Spawn_Plant; 
GLabel biomes; 
GDropList Biomes; 
